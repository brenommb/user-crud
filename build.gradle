buildscript {
    ext {
        springBootVersion = '2.0.8.RELEASE'
        springCloudContractVersion = '2.0.2.RELEASE'
        confluentVersion = '4.0.0'
        springCloudVersion = 'Finchley.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "org.springframework.cloud:spring-cloud-contract-gradle-plugin:${springCloudContractVersion}"
        classpath "io.spring.javaformat:spring-javaformat-gradle-plugin:0.0.15"
    }
}

repositories {
    jcenter()
    mavenCentral()
}

apply plugin: 'jacoco'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'application'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'io.spring.javaformat'

sourceCompatibility = 1.8
mainClassName = 'com.user.UserApplication'

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

processResources {
    filesMatching("**/application-*.yml") {
        filter org.apache.tools.ant.filters.ReplaceTokens, tokens: [
                "application.version": project.property("version")
        ]
    }
}

dependencies {
    runtime('org.springframework.boot:spring-boot-devtools')
    runtime(group: 'com.h2database', name: 'h2')

    compile(group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: springBootVersion)
    compile('org.springframework.boot:spring-boot-starter-validation')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-undertow')

    compile 'io.springfox:springfox-swagger2:2.9.2'
    compile 'io.springfox:springfox-swagger-ui:2.9.2'

    compile(group: 'org.reflections', name: 'reflections', version: '0.9.12')
    compile(group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-csv')
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.10'
    compile group: 'com.opencsv', name: 'opencsv', version: '3.7'
    compile group: 'commons-io', name: 'commons-io', version: '2.6'
    compile 'org.mapstruct:mapstruct-jdk8:1.3.1.Final'
    compileOnly('org.projectlombok:lombok:1.16.22')
    annotationProcessor ('org.mapstruct:mapstruct-processor:1.3.1.Final', 'org.projectlombok:lombok:1.16.22')

    testCompile 'com.tngtech.archunit:archunit:0.12.0'
    testCompile group:'org.springframework.boot', name:'spring-boot-starter-test'
    testCompile('org.testcontainers:testcontainers:1.11.2')

}

configurations {
    compile.exclude module: 'spring-boot-starter-tomcat'
}

bootRun {
    args = ["--spring.profiles.active=local"]
}

distZip {
    archiveName "${projectName}-${version}.zip"
}

tasks.checkFormatMain {
    dependsOn("format")
}

tasks.build {
    dependsOn("format")
}



